@page "/"

@inject ILogger<Home> Logger

<PageTitle>Home</PageTitle>

@if (allProjects is not null)
{
    <RadzenFormField Text="Project ID">
        <RadzenDropDown TValue="string" 
                        Data="@allProjects" 
                        @bind-Value="projectId" 
                        AllowFiltering="true" 
                        AllowVirtualization="true"
                        Change="OnProjectSelect" />
    </RadzenFormField>

}

<RadzenText Text="@summary" />

@code {
    IEnumerable<string>? allProjects;

    string? projectId;

    string? summary;

    protected override void OnInitialized()
    {
        string home = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);
        string path = Path.Join(home, "Internship", "TextExtractor", "files");

        Logger.LogInformation(path);

        allProjects = Directory.GetDirectories(path)
            .Select(x => Path.GetFileName(x)!).ToList();
    }

    async Task OnProjectSelect()
    {


        string home = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);
        string path = Path.Join(home, "Internship", "Summarizer", "summaries", $"{projectId}.txt");


        summary = await File.ReadAllTextAsync(path);

                Logger.LogInformation(summary);

    }
}